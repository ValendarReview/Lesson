#Скачать и установить
https://www.raspberrypi.org/software/
https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html
#+ система Raspberry Pi OS
https://www.raspberrypi.org/software/operating-systems/#raspberry-pi-os-32-bit

#Копируем пустой файл ssh в корень диска boot. Подключаем одноплатник к Ethernet и смотрим выданый IP на роутере. Входим по ssh на сервер Raspberry Pi
#Логин:
pi
#Пароль: (пароль не видно при вводе - не боимся!)
raspberry

#Зайдем под повышенными привелегиями (аля из-под админа в Виновс)
sudo - s

#вводим пароль если запросит (пароль не видно при вводе - не боимся!)
raspberry

#Обновляем пакеты
apt update & apt upgrade -y & apt list --upgradable

#Обновляем Raspberry OS.  На вопрос y/n Нажимаем y на клавиатуре.
rpi-update
#После появления строчки "*** A reboot is needed to activate the new firmware", перезагружаем сервер.
reboot

#после этого перезагруежмся, правйокнопкой на верхнем окне PuTTY и выбирваем "Restart session"

#Добвляем нового пользваотеля,
sudo -s & adduser NAME & usermod -aG sudo NAME
sudo -s
adduser name

#задаем ему пароль. Пароль видм не будет. Повторяем пароль. Все остальные действия просто жмем Enter. В конце жмем "Y"

#И добавляем его в группу супер пользователя sudo
usermod -aG sudo name

#Зайдем в систему под новым пользоватлем name
su name 

#Повысим права до супер пользоватлея, введя пароль от учетной записи name
sudo -s

#Настраиваем сетевые подключения по Ethernet и WiFi. Для этого устнавливаем network-manager.
apt-get install -y network-manager

#Отключаем встроенный DHCP на двух сетевых интерфейсах 
echo "denyinterfaces wlan0" >> /etc/dhcpcd.conf & echo "denyinterfaces eth0" >> /etc/dhcpcd.conf

#Отлюкчаем получение случайного MAC адреса при переразгрузке девайса.
echo "[connection]
wifi.mac-address-randomization=1
[device]
wifi.scan-rand-mac-address=no" >> /etc/NetworkManager/conf.d/100-disable-wifi-mac-randomization.conf

#Настраиваем статический IP адрес для Ethernet + WiFi + подклчюемся по Wifi к домешнему роутеру. Тут нам поможет +- графическое приложение nmtui
nmtui
 
 #Activate a connection  - выбираем имя вашей WiFi точки доступа "NAME-WiFi"   - жмем  <Activate> 
 #Воодим пароль для подключения к WiFi сети "Passwords or encryption keys are required to access the                                                                         wireless network 'Businka'"
 #После успешоного подлкючния жмем BACK и переходим в раздел активации и устновки отдельного ИП адреса
 #Выбираем "Edit a connection" - далее   "Wired connection 1 " -  <Edit...> 
 #В поле "IPv4 CONFIGURATION <A" переходим на строку "Automatic" и выбираем "Manual" после жмем на " <Show>  " и в раскрывшемся меню устанавливаем вручную IP адрес( напрмиер 192.168.1.5), шлюз и DNS сервер (можно использовать IP вашего шлюза ( роутера)  192.168.1.1))
 #Выбираем "Edit a connection" - далее   "Wifi - Имя Вашей WiFi сети - <Edit...> 
 #В поле "IPv4 CONFIGURATION <A" переходим на строку "Automatic" и выбираем "Manual" после жмем на " <Show>  " и в раскрывшемся меню устанавливаем вручную IP адрес( напрмиер 192.168.1.6), шлюз и DNS сервер (можно использовать IP вашего шлюза ( роутера)  192.168.1.1))

#Вовращяемся и в пунтке "Set system hostname " - устанавливаем имя нашего одноплатника "Smart Home Valendar" - вы пишите свео =) 
#После всех натсроек "Quit" 

#Настраиваем локаль и часовой пояс.
raspi-config

# пункт 5 Localisation Options -  I1 Change Locale -  пробелом надо установить локаль -  ru_RU.UTF-8 UTF-8 - TAB и жмем OK. В следующем окне "Default locale for the system environment: " - выбираем  ru_RU.UTF-8     - опять OK
# пункт 5 Localisation Options / I2 Change Timezone - пробелом выбираем нужный часовой пояс

#Устанавливаем пакеты, которые нам будут нужны для дальнейшей работы 
apt-get install -y bash curl git jq avahi-daemon dbus apparmor-utils libavahi-compat-libdnssd-dev libatlas3-base apt-transport-https ca-certificates socat software-properties-common ftpd mc

#Перезагружаем устройство
reboot

#Не забываем, что IP адрес изменился, подключаемся SSH PuTTY по тому, который указали вручную. В моем случае это 192.168.1.5 - если по Ethernet кабелю.
sudo -s 
# Вводим пароль пользоватлея и Проверяем метрику подключний в параметрах маршрутизации. 100 это Ethernet подключение, а 600 Wifi. Для стабильной работы WiFi, после отклчюения Ethernet нам надо изменить 600 на 105.
route

#переходим по пути 
cd /etc/NetworkManager/system-connections/

#Вызываем Midnight Commander
mc

# Жмем F4 на файле - названии вашей WiFi сети.
# Выбираем редактор файлов, я рекомендую 2 - mcedit
# После указания IP адреса в параметрах "[ipv4]" дописываем
route-metric=105

# Жмем F2 и Enter - сохранить
# Перезагружаем девайс и проверяем
reboot
sudo -s
route

#Устанавливаем Docker — программное обеспечение для автоматизации развёртывания и управления приложениями.
curl -fsSL get.docker.com -o get-docker.sh && sh get-docker.sh

# Создаем группу безопасности docker и  добавляем в нее пользователя docker
groupadd docker
gpasswd -a $USER docker
newgrp docker

# Устанавливаем Portainer — это удобная ВКБ админка для управления Docker контейнерами прямо из браузера. Панель умеет работать как с локально установленным докером, так и с удалёнными серверами.
docker pull portainer/portainer-ce
docker volume create portainer_data
docker run -d -p 9000:9000 --name portainer --restart always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce


